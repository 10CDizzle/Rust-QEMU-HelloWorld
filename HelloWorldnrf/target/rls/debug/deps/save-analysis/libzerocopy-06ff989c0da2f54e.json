{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0","program":"C:\\Users\\Chris\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","zerocopy","--edition=2018","C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=06ff989c0da2f54e","-C","extra-filename=-06ff989c0da2f54e","--out-dir","c:\\Users\\Chris\\Documents\\GitHub\\Rust-QEMU-HelloWorld\\HelloWorldnrf\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Chris\\Documents\\GitHub\\Rust-QEMU-HelloWorld\\HelloWorldnrf\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\Chris\\Documents\\GitHub\\Rust-QEMU-HelloWorld\\HelloWorldnrf\\target\\rls\\debug\\deps\\libbyteorder-9309d46dbb827ed7.rmeta","--extern","zerocopy_derive=c:\\Users\\Chris\\Documents\\GitHub\\Rust-QEMU-HelloWorld\\HelloWorldnrf\\target\\rls\\debug\\deps\\zerocopy_derive-99b335a7c2824bf2.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Chris\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Chris\\Documents\\GitHub\\Rust-QEMU-HelloWorld\\HelloWorldnrf\\target\\rls\\debug\\deps\\libzerocopy-06ff989c0da2f54e.rmeta"},"prelude":{"crate_id":{"name":"zerocopy","disambiguator":[7570475970171020277,0]},"crate_root":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src","external_crates":[{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","num":4,"id":{"name":"byteorder","disambiguator":[7908544157538532347,0]}},{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","num":5,"id":{"name":"zerocopy_derive","disambiguator":[7352571237309828435,0]}}],"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":165,"byte_end":74157,"line_start":5,"line_end":1929,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":1145,"byte_end":1146,"line_start":30,"line_end":30,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":1173,"byte_end":1174,"line_start":31,"line_end":31,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"AsBytes","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":165,"byte_end":74157,"line_start":5,"line_end":1929,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":113},{"krate":0,"index":119},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":148},{"krate":0,"index":154},{"krate":0,"index":160},{"krate":0,"index":166},{"krate":0,"index":174},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":201},{"krate":0,"index":206},{"krate":0,"index":211},{"krate":0,"index":216},{"krate":0,"index":221},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":265},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":308}],"decl_id":null,"docs":" Utilities for safe zero-copy parsing and serialization.","sig":null,"attributes":[{"value":"/ Utilities for safe zero-copy parsing and serialization.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":165,"byte_end":224,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":225,"byte_end":228,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate provides utilities which make it easy to perform zero-copy","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":229,"byte_end":302,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ parsing and serialization by allowing zero-copy conversion to/from byte","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":303,"byte_end":378,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ slices.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":379,"byte_end":390,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is enabled by three core marker traits, each of which can be derived","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":395,"byte_end":472,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ (e.g., `#[derive(FromBytes)]`):","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":473,"byte_end":508,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/ - [`FromBytes`] indicates that a type may safely be converted from an","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":509,"byte_end":582,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   arbitrary byte sequence","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":583,"byte_end":612,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/ - [`AsBytes`] indicates that a type may safely be converted *to* a byte","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":613,"byte_end":688,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/   sequence","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":689,"byte_end":703,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/ - [`Unaligned`] indicates that a type's alignment requirement is 1","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":704,"byte_end":774,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":775,"byte_end":778,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Types which implement a subset of these traits can then be converted to/from","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":779,"byte_end":859,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ byte sequences with little to no runtime overhead.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":860,"byte_end":914,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":915,"byte_end":918,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that these traits are ignorant of byte order. For byte order-aware","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":919,"byte_end":994,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ types, see the [`byteorder`] module.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":995,"byte_end":1035,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"no_std","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":1060,"byte_end":1066,"line_start":25,"line_end":25,"column_start":24,"column_end":30}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":1069,"byte_end":1097,"line_start":26,"line_end":26,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"byteorder","qualname":"::byteorder","value":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":414},{"krate":0,"index":420},{"krate":0,"index":428},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":456},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":321},{"krate":0,"index":326},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":402},{"krate":0,"index":406},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":411},{"krate":0,"index":557},{"krate":0,"index":563},{"krate":0,"index":571},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":487},{"krate":0,"index":492},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":517},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":530},{"krate":0,"index":535},{"krate":0,"index":540},{"krate":0,"index":545},{"krate":0,"index":549},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":554},{"krate":0,"index":684},{"krate":0,"index":690},{"krate":0,"index":698},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":726},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":662},{"krate":0,"index":667},{"krate":0,"index":672},{"krate":0,"index":676},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":681},{"krate":0,"index":795},{"krate":0,"index":801},{"krate":0,"index":809},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":837},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":757},{"krate":0,"index":762},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":778},{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":792},{"krate":0,"index":961},{"krate":0,"index":967},{"krate":0,"index":975},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1003},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":868},{"krate":0,"index":873},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":912},{"krate":0,"index":916},{"krate":0,"index":921},{"krate":0,"index":925},{"krate":0,"index":930},{"krate":0,"index":934},{"krate":0,"index":939},{"krate":0,"index":944},{"krate":0,"index":949},{"krate":0,"index":953},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":958},{"krate":0,"index":1102},{"krate":0,"index":1108},{"krate":0,"index":1116},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1144},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1032},{"krate":0,"index":1037},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1071},{"krate":0,"index":1075},{"krate":0,"index":1080},{"krate":0,"index":1085},{"krate":0,"index":1090},{"krate":0,"index":1094},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1099},{"krate":0,"index":1227},{"krate":0,"index":1233},{"krate":0,"index":1241},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1269},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1173},{"krate":0,"index":1178},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1205},{"krate":0,"index":1210},{"krate":0,"index":1215},{"krate":0,"index":1219},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1224},{"krate":0,"index":1336},{"krate":0,"index":1342},{"krate":0,"index":1350},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1378},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1298},{"krate":0,"index":1303},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1319},{"krate":0,"index":1324},{"krate":0,"index":1328},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1333}],"decl_id":null,"docs":" Byte order-aware numeric primitives.","sig":null,"attributes":[{"value":"/ Byte order-aware numeric primitives.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74324,"byte_end":74364,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74365,"byte_end":74368,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module contains equivalents of the native multi-byte integer types with","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74369,"byte_end":74449,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ no alignment requirement and supporting byte order conversions.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74450,"byte_end":74517,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74518,"byte_end":74521,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For each native multi-byte integer type - `u16`, `i16`, `u32`, etc - an","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74522,"byte_end":74597,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ equivalent type is defined by this module - [`U16`], [`I16`], [`U32`], etc.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74598,"byte_end":74677,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ Unlike their native counterparts, these types have alignment 1, and take a","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74678,"byte_end":74756,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ type parameter specifying the byte order in which the bytes are stored in","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74757,"byte_end":74834,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ memory. Each type implements the [`FromBytes`], [`AsBytes`], and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74835,"byte_end":74903,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ [`Unaligned`] traits.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74904,"byte_end":74929,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74930,"byte_end":74933,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These two properties, taken together, make these types very useful for","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":74934,"byte_end":75008,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ defining data structures whose memory layout matches a wire format such as","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75009,"byte_end":75087,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that of a network protocol or a file format. Such formats often have","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75088,"byte_end":75160,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ multi-byte values at offsets that do not respect the alignment requirements","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75161,"byte_end":75240,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of the equivalent native types, and stored in a byte order not necessarily","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75241,"byte_end":75319,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ the same as that of the target platform.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75320,"byte_end":75364,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75365,"byte_end":75368,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75369,"byte_end":75382,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75383,"byte_end":75386,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ One use of these types is for representing network packet formats, such as","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75387,"byte_end":75465,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ UDP:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75466,"byte_end":75474,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75475,"byte_end":75478,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75479,"byte_end":75497,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ # use zerocopy::*;","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75498,"byte_end":75520,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ use ::byteorder::NetworkEndian;","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75521,"byte_end":75556,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75557,"byte_end":75560,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromBytes, AsBytes, Unaligned)]","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75561,"byte_end":75605,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75606,"byte_end":75620,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ struct UdpHeader {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75621,"byte_end":75643,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/     src_port: U16<NetworkEndian>,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75644,"byte_end":75681,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/     dst_port: U16<NetworkEndian>,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75682,"byte_end":75719,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/     length: U16<NetworkEndian>,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75720,"byte_end":75755,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/     checksum: U16<NetworkEndian>,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75756,"byte_end":75793,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75794,"byte_end":75799,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75800,"byte_end":75803,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ struct UdpPacket<B: ByteSlice> {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75804,"byte_end":75840,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/     header: LayoutVerified<B, UdpHeader>,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75841,"byte_end":75886,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/     body: B,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75887,"byte_end":75903,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75904,"byte_end":75909,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75910,"byte_end":75913,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl<B: ByteSlice> UdpPacket<B> {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75914,"byte_end":75951,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/     fn parse(bytes: B) -> Option<UdpPacket<B>> {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":75952,"byte_end":76004,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/         let (header, body) = LayoutVerified::new_from_prefix(bytes)?;","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76005,"byte_end":76078,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/         Some(UdpPacket { header, body })","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76079,"byte_end":76123,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76124,"byte_end":76133,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76134,"byte_end":76137,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     fn src_port(&self) -> u16 {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76138,"byte_end":76173,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/         self.header.src_port.get()","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76174,"byte_end":76212,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76213,"byte_end":76222,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76223,"byte_end":76226,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     // more getters...","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76227,"byte_end":76253,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76254,"byte_end":76259,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":76260,"byte_end":76267,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85015,"byte_end":85018,"line_start":300,"line_end":300,"column_start":5,"column_end":8},"name":"U16","qualname":"::byteorder::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 16-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85156,"byte_end":85159,"line_start":310,"line_end":310,"column_start":17,"column_end":20},"name":"U32","qualname":"::byteorder::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 32-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85247,"byte_end":85250,"line_start":311,"line_end":311,"column_start":17,"column_end":20},"name":"U64","qualname":"::byteorder::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 64-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85328,"byte_end":85332,"line_start":312,"line_end":312,"column_start":17,"column_end":21},"name":"U128","qualname":"::byteorder::U128","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 128-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85417,"byte_end":85420,"line_start":315,"line_end":315,"column_start":5,"column_end":8},"name":"I16","qualname":"::byteorder::I16","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 16-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85557,"byte_end":85560,"line_start":325,"line_end":325,"column_start":18,"column_end":21},"name":"I32","qualname":"::byteorder::I32","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 32-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85647,"byte_end":85650,"line_start":326,"line_end":326,"column_start":18,"column_end":21},"name":"I64","qualname":"::byteorder::I64","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 64-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":85727,"byte_end":85731,"line_start":327,"line_end":327,"column_start":18,"column_end":22},"name":"I128","qualname":"::byteorder::I128","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 128-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\byteorder.rs","byte_start":79844,"byte_end":79864,"line_start":150,"line_end":150,"column_start":13,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5755,"byte_end":5764,"line_start":154,"line_end":154,"column_start":18,"column_end":27},"name":"FromBytes","qualname":"::FromBytes","value":"FromBytes","parent":null,"children":[{"krate":0,"index":100}],"decl_id":null,"docs":" Types for which any byte pattern is valid.","sig":null,"attributes":[{"value":"/ Types for which any byte pattern is valid.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3261,"byte_end":3307,"line_start":99,"line_end":99,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3308,"byte_end":3311,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ WARNING: Do not implement this trait yourself! Instead, use","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3312,"byte_end":3375,"line_start":101,"line_end":101,"column_start":1,"column_end":64}},{"value":"/ `#[derive(FromBytes)]`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3376,"byte_end":3403,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3404,"byte_end":3407,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ `FromBytes` types can safely be deserialized from an untrusted sequence of","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3408,"byte_end":3486,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ bytes because any byte sequence corresponds to a valid instance of the type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3487,"byte_end":3567,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3568,"byte_end":3571,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `FromBytes` is ignorant of byte order. For byte order-aware types, see the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3572,"byte_end":3650,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ [`byteorder`] module.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3651,"byte_end":3676,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3677,"byte_end":3680,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3681,"byte_end":3693,"line_start":110,"line_end":110,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3694,"byte_end":3697,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ If `T: FromBytes`, then unsafe code may assume that it is sound to treat any","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3698,"byte_end":3778,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ initialized sequence of bytes of length `size_of::<T>()` as a `T`. If a type","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3779,"byte_end":3859,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ is marked as `FromBytes` which violates this contract, it may cause","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3860,"byte_end":3931,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3932,"byte_end":3955,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3956,"byte_end":3959,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ If a type has the following properties, then it is safe to implement","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":3960,"byte_end":4032,"line_start":117,"line_end":117,"column_start":1,"column_end":73}},{"value":"/ `FromBytes` for that type:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4033,"byte_end":4063,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"/ - If the type is a struct:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4064,"byte_end":4094,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"/   - All of its fields must implement `FromBytes`","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4095,"byte_end":4147,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/ - If the type is an enum:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4148,"byte_end":4177,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/   - It must be a C-like enum (meaning that all variants have no fields)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4178,"byte_end":4253,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/   - It must have a defined representation (`repr`s `C`, `u8`, `u16`, `u32`,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4254,"byte_end":4333,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/     `u64`, `usize`, `i8`, `i16`, `i32`, `i64`, or `isize`).","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4334,"byte_end":4397,"line_start":124,"line_end":124,"column_start":1,"column_end":64}},{"value":"/   - The maximum number of discriminants must be used (so that every possible","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4398,"byte_end":4478,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/     bit pattern is a valid one). Be very careful when using the `C`,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4479,"byte_end":4551,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/     `usize`, or `isize` representations, as their size is","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4552,"byte_end":4613,"line_start":127,"line_end":127,"column_start":1,"column_end":62}},{"value":"/     platform-dependent.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4614,"byte_end":4641,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4642,"byte_end":4645,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Rationale","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4646,"byte_end":4661,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4662,"byte_end":4665,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ## Why isn't an explicit representation required for structs?","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4666,"byte_end":4731,"line_start":132,"line_end":132,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4732,"byte_end":4735,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Per the [Rust reference](reference),","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4736,"byte_end":4776,"line_start":134,"line_end":134,"column_start":1,"column_end":41}},{"value":"/ > The representation of a type can change the padding between fields, but","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4777,"byte_end":4854,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/ does not change the layout of the fields themselves.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4855,"byte_end":4911,"line_start":136,"line_end":136,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4912,"byte_end":4915,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ [reference]: https://doc.rust-lang.org/reference/type-layout.html#representations","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":4916,"byte_end":5001,"line_start":138,"line_end":138,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5002,"byte_end":5005,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Since the layout of structs only consists of padding bytes and field bytes,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5006,"byte_end":5085,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ a struct is soundly `FromBytes` if:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5086,"byte_end":5125,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/ 1. its padding is soundly `FromBytes`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5126,"byte_end":5172,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ 2. its fields are soundly `FromBytes`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5173,"byte_end":5215,"line_start":143,"line_end":143,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5216,"byte_end":5219,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The answer to the first question is always yes: padding bytes do not have","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5220,"byte_end":5297,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ any validity constraints. A [discussion] of this question in the Unsafe Code","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5298,"byte_end":5378,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ Guidelines Working Group concluded that it would be virtually unimaginable","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5379,"byte_end":5457,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ for future versions of rustc to add validity constraints to padding bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5458,"byte_end":5536,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5537,"byte_end":5540,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [discussion]: https://github.com/rust-lang/unsafe-code-guidelines/issues/174","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5541,"byte_end":5621,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5622,"byte_end":5625,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Whether a struct is soundly `FromBytes` therefore solely depends on whether","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5626,"byte_end":5705,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ its fields are `FromBytes`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5706,"byte_end":5737,"line_start":153,"line_end":153,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5884,"byte_end":5930,"line_start":158,"line_end":158,"column_start":8,"column_end":54},"name":"only_derive_is_allowed_to_implement_this_trait","qualname":"::FromBytes::only_derive_is_allowed_to_implement_this_trait","value":"pub fn only_derive_is_allowed_to_implement_this_trait() where Self: Sized","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8226,"byte_end":8233,"line_start":216,"line_end":216,"column_start":18,"column_end":25},"name":"AsBytes","qualname":"::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice.","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":5967,"byte_end":6028,"line_start":163,"line_end":163,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6029,"byte_end":6032,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ WARNING: Do not implement this trait yourself! Instead, use","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6033,"byte_end":6096,"line_start":165,"line_end":165,"column_start":1,"column_end":64}},{"value":"/ `#[derive(AsBytes)]`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6097,"byte_end":6122,"line_start":166,"line_end":166,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6123,"byte_end":6126,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `AsBytes` types can be safely viewed as a slice of bytes. In particular,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6127,"byte_end":6203,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ this means that, in any valid instance of the type, none of the bytes of the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6204,"byte_end":6284,"line_start":169,"line_end":169,"column_start":1,"column_end":81}},{"value":"/ instance are uninitialized. This precludes the following types:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6285,"byte_end":6352,"line_start":170,"line_end":170,"column_start":1,"column_end":68}},{"value":"/ - Structs with internal padding","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6353,"byte_end":6388,"line_start":171,"line_end":171,"column_start":1,"column_end":36}},{"value":"/ - Unions in which not all variants have the same length","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6389,"byte_end":6448,"line_start":172,"line_end":172,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6449,"byte_end":6452,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ `AsBytes` is ignorant of byte order. For byte order-aware types, see the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6453,"byte_end":6529,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ [`byteorder`] module.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6530,"byte_end":6555,"line_start":175,"line_end":175,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6556,"byte_end":6559,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Custom Derive Errors","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6560,"byte_end":6586,"line_start":177,"line_end":177,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6587,"byte_end":6590,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ Due to the way that the custom derive for `AsBytes` is implemented, you may","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6591,"byte_end":6670,"line_start":179,"line_end":179,"column_start":1,"column_end":80}},{"value":"/ get an error like this:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6671,"byte_end":6698,"line_start":180,"line_end":180,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6699,"byte_end":6702,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6703,"byte_end":6714,"line_start":182,"line_end":182,"column_start":1,"column_end":12}},{"value":"/ error[E0080]: evaluation of constant value failed","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6715,"byte_end":6768,"line_start":183,"line_end":183,"column_start":1,"column_end":54}},{"value":"/   --> lib.rs:1:10","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6769,"byte_end":6790,"line_start":184,"line_end":184,"column_start":1,"column_end":22}},{"value":"/    |","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6791,"byte_end":6799,"line_start":185,"line_end":185,"column_start":1,"column_end":9}},{"value":"/  1 | #[derive(AsBytes)]","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6800,"byte_end":6827,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/    |          ^^^^^^^ attempt to divide by zero","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6828,"byte_end":6879,"line_start":187,"line_end":187,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6880,"byte_end":6887,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6888,"byte_end":6891,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This error means that the type being annotated has padding bytes, which is","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6892,"byte_end":6970,"line_start":190,"line_end":190,"column_start":1,"column_end":79}},{"value":"/ illegal for `AsBytes` types. Consider either adding explicit struct fields","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":6971,"byte_end":7049,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ where those padding bytes would be or using `#[repr(packed)]`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7050,"byte_end":7116,"line_start":192,"line_end":192,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7117,"byte_end":7120,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7121,"byte_end":7133,"line_start":194,"line_end":194,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7134,"byte_end":7137,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ If `T: AsBytes`, then unsafe code may assume that it is sound to treat any","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7138,"byte_end":7216,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ instance of the type as an immutable `[u8]` of length `size_of::<T>()`. If a","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7217,"byte_end":7297,"line_start":197,"line_end":197,"column_start":1,"column_end":81}},{"value":"/ type is marked as `AsBytes` which violates this contract, it may cause","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7298,"byte_end":7372,"line_start":198,"line_end":198,"column_start":1,"column_end":75}},{"value":"/ undefined behavior.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7373,"byte_end":7396,"line_start":199,"line_end":199,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7397,"byte_end":7400,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ If a type has the following properties, then it is safe to implement","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7401,"byte_end":7473,"line_start":201,"line_end":201,"column_start":1,"column_end":73}},{"value":"/ `AsBytes` for that type","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7474,"byte_end":7501,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/ - If the type is a struct:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7502,"byte_end":7532,"line_start":203,"line_end":203,"column_start":1,"column_end":31}},{"value":"/   - It must have a defined representation (`repr(C)`, `repr(transparent)`,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7533,"byte_end":7611,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/     or `repr(packed)`).","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7612,"byte_end":7639,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"/   - All of its fields must be `AsBytes`","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7640,"byte_end":7683,"line_start":206,"line_end":206,"column_start":1,"column_end":44}},{"value":"/   - Its layout must have no padding. This is always true for","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7684,"byte_end":7748,"line_start":207,"line_end":207,"column_start":1,"column_end":65}},{"value":"/     `repr(transparent)` and `repr(packed)`. For `repr(C)`, see the layout","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7749,"byte_end":7826,"line_start":208,"line_end":208,"column_start":1,"column_end":78}},{"value":"/     algorithm described in the [Rust Reference].","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7827,"byte_end":7879,"line_start":209,"line_end":209,"column_start":1,"column_end":53}},{"value":"/ - If the type is an enum:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7880,"byte_end":7909,"line_start":210,"line_end":210,"column_start":1,"column_end":30}},{"value":"/   - It must be a C-like enum (meaning that all variants have no fields)","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7910,"byte_end":7985,"line_start":211,"line_end":211,"column_start":1,"column_end":76}},{"value":"/   - It must have a defined representation (`repr`s `C`, `u8`, `u16`, `u32`,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":7986,"byte_end":8065,"line_start":212,"line_end":212,"column_start":1,"column_end":80}},{"value":"/     `u64`, `usize`, `i8`, `i16`, `i32`, `i64`, or `isize`).","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8066,"byte_end":8129,"line_start":213,"line_end":213,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8130,"byte_end":8133,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [Rust Reference]: https://doc.rust-lang.org/reference/type-layout.html","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8134,"byte_end":8208,"line_start":215,"line_end":215,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8262,"byte_end":8308,"line_start":218,"line_end":218,"column_start":8,"column_end":54},"name":"only_derive_is_allowed_to_implement_this_trait","qualname":"::AsBytes::only_derive_is_allowed_to_implement_this_trait","value":"pub fn only_derive_is_allowed_to_implement_this_trait() where Self: Sized","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8493,"byte_end":8501,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Get the bytes of this value.","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8347,"byte_end":8379,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8384,"byte_end":8387,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ `as_bytes` provides access to the bytes of this value as an immutable","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8392,"byte_end":8465,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8470,"byte_end":8485,"line_start":225,"line_end":225,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8959,"byte_end":8971,"line_start":239,"line_end":239,"column_start":8,"column_end":20},"name":"as_bytes_mut","qualname":"::AsBytes::as_bytes_mut","value":"pub fn as_bytes_mut(&mut Self) -> &mut [u8] where Self: FromBytes","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Get the bytes of this value mutably.","sig":null,"attributes":[{"value":"/ Get the bytes of this value mutably.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8804,"byte_end":8844,"line_start":235,"line_end":235,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8849,"byte_end":8852,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ `as_bytes_mut` provides access to the bytes of this value as a mutable","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8857,"byte_end":8931,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":8936,"byte_end":8951,"line_start":238,"line_end":238,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10103,"byte_end":10112,"line_start":279,"line_end":279,"column_start":18,"column_end":27},"name":"Unaligned","qualname":"::Unaligned","value":"Unaligned","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" Types with no alignment requirement.","sig":null,"attributes":[{"value":"/ Types with no alignment requirement.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9616,"byte_end":9656,"line_start":266,"line_end":266,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9657,"byte_end":9660,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ WARNING: Do not implement this trait yourself! Instead, use","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9661,"byte_end":9724,"line_start":268,"line_end":268,"column_start":1,"column_end":64}},{"value":"/ `#[derive(Unaligned)]`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9725,"byte_end":9752,"line_start":269,"line_end":269,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9753,"byte_end":9756,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ If `T: Unaligned`, then `align_of::<T>() == 1`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9757,"byte_end":9808,"line_start":271,"line_end":271,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9809,"byte_end":9812,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9813,"byte_end":9825,"line_start":273,"line_end":273,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9826,"byte_end":9829,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ If `T: Unaligned`, then unsafe code may assume that it is sound to produce a","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9830,"byte_end":9910,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ reference to `T` at any memory location regardless of alignment. If a type","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9911,"byte_end":9989,"line_start":276,"line_end":276,"column_start":1,"column_end":79}},{"value":"/ is marked as `Unaligned` which violates this contract, it may cause","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":9990,"byte_end":10061,"line_start":277,"line_end":277,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10062,"byte_end":10085,"line_start":278,"line_end":278,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10232,"byte_end":10278,"line_start":283,"line_end":283,"column_start":8,"column_end":54},"name":"only_derive_is_allowed_to_implement_this_trait","qualname":"::Unaligned::only_derive_is_allowed_to_implement_this_trait","value":"pub fn only_derive_is_allowed_to_implement_this_trait() where Self: Sized","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12273,"byte_end":12287,"line_start":353,"line_end":353,"column_start":12,"column_end":26},"name":"LayoutVerified","qualname":"::LayoutVerified","value":"","parent":null,"children":[],"decl_id":null,"docs":" A length- and alignment-checked reference to a byte slice which can safely\n be reinterpreted as another type.","sig":null,"attributes":[{"value":"/ A length- and alignment-checked reference to a byte slice which can safely","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10618,"byte_end":10696,"line_start":304,"line_end":304,"column_start":1,"column_end":79}},{"value":"/ be reinterpreted as another type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10697,"byte_end":10734,"line_start":305,"line_end":305,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10735,"byte_end":10738,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ `LayoutVerified` is a byte slice reference (`&[u8]`, `&mut [u8]`,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10739,"byte_end":10808,"line_start":307,"line_end":307,"column_start":1,"column_end":70}},{"value":"/ `Ref<[u8]>`, `RefMut<[u8]>`, etc) with the invaraint that the slice's length","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10809,"byte_end":10889,"line_start":308,"line_end":308,"column_start":1,"column_end":81}},{"value":"/ and alignment are each greater than or equal to the length and alignment of","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10890,"byte_end":10969,"line_start":309,"line_end":309,"column_start":1,"column_end":80}},{"value":"/ `T`. Using this invariant, it implements `Deref` for `T` so long as `T:","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":10970,"byte_end":11045,"line_start":310,"line_end":310,"column_start":1,"column_end":76}},{"value":"/ FromBytes` and `DerefMut` so long as `T: FromBytes + AsBytes`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11046,"byte_end":11112,"line_start":311,"line_end":311,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11113,"byte_end":11116,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11117,"byte_end":11131,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11132,"byte_end":11135,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ `LayoutVerified` can be used to treat a sequence of bytes as a structured","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11136,"byte_end":11213,"line_start":315,"line_end":315,"column_start":1,"column_end":78}},{"value":"/ type, and to read and write the fields of that type as if the byte slice","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11214,"byte_end":11290,"line_start":316,"line_end":316,"column_start":1,"column_end":77}},{"value":"/ reference were simply a reference to that type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11291,"byte_end":11342,"line_start":317,"line_end":317,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11343,"byte_end":11346,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11347,"byte_end":11358,"line_start":319,"line_end":319,"column_start":1,"column_end":12}},{"value":"/ use zerocopy::{AsBytes, ByteSlice, ByteSliceMut, FromBytes, LayoutVerified, Unaligned};","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11359,"byte_end":11450,"line_start":320,"line_end":320,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11451,"byte_end":11454,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromBytes, AsBytes, Unaligned)]","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11455,"byte_end":11499,"line_start":322,"line_end":322,"column_start":1,"column_end":45}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11500,"byte_end":11514,"line_start":323,"line_end":323,"column_start":1,"column_end":15}},{"value":"/ struct UdpHeader {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11515,"byte_end":11537,"line_start":324,"line_end":324,"column_start":1,"column_end":23}},{"value":"/     src_port: [u8; 2],","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11538,"byte_end":11564,"line_start":325,"line_end":325,"column_start":1,"column_end":27}},{"value":"/     dst_port: [u8; 2],","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11565,"byte_end":11591,"line_start":326,"line_end":326,"column_start":1,"column_end":27}},{"value":"/     length: [u8; 2],","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11592,"byte_end":11616,"line_start":327,"line_end":327,"column_start":1,"column_end":25}},{"value":"/     checksum: [u8; 2],","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11617,"byte_end":11643,"line_start":328,"line_end":328,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11644,"byte_end":11649,"line_start":329,"line_end":329,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11650,"byte_end":11653,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ struct UdpPacket<B> {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11654,"byte_end":11679,"line_start":331,"line_end":331,"column_start":1,"column_end":26}},{"value":"/     header: LayoutVerified<B, UdpHeader>,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11680,"byte_end":11725,"line_start":332,"line_end":332,"column_start":1,"column_end":46}},{"value":"/     body: B,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11726,"byte_end":11742,"line_start":333,"line_end":333,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11743,"byte_end":11748,"line_start":334,"line_end":334,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11749,"byte_end":11752,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ impl<B: ByteSlice> UdpPacket<B> {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11753,"byte_end":11790,"line_start":336,"line_end":336,"column_start":1,"column_end":38}},{"value":"/     pub fn parse(bytes: B) -> Option<UdpPacket<B>> {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11791,"byte_end":11847,"line_start":337,"line_end":337,"column_start":1,"column_end":57}},{"value":"/         let (header, body) = LayoutVerified::new_unaligned_from_prefix(bytes)?;","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11848,"byte_end":11931,"line_start":338,"line_end":338,"column_start":1,"column_end":84}},{"value":"/         Some(UdpPacket { header, body })","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11932,"byte_end":11976,"line_start":339,"line_end":339,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11977,"byte_end":11986,"line_start":340,"line_end":340,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11987,"byte_end":11990,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/     pub fn get_src_port(&self) -> [u8; 2] {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":11991,"byte_end":12038,"line_start":342,"line_end":342,"column_start":1,"column_end":48}},{"value":"/         self.header.src_port","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12039,"byte_end":12071,"line_start":343,"line_end":343,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12072,"byte_end":12081,"line_start":344,"line_end":344,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12082,"byte_end":12087,"line_start":345,"line_end":345,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12088,"byte_end":12091,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ impl<B: ByteSliceMut> UdpPacket<B> {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12092,"byte_end":12132,"line_start":347,"line_end":347,"column_start":1,"column_end":41}},{"value":"/     pub fn set_src_port(&mut self, src_port: [u8; 2]) {","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12133,"byte_end":12192,"line_start":348,"line_end":348,"column_start":1,"column_end":60}},{"value":"/         self.header.src_port = src_port;","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12193,"byte_end":12237,"line_start":349,"line_end":349,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12238,"byte_end":12247,"line_start":350,"line_end":350,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12248,"byte_end":12253,"line_start":351,"line_end":351,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12254,"byte_end":12261,"line_start":352,"line_end":352,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12672,"byte_end":12675,"line_start":365,"line_end":365,"column_start":12,"column_end":15},"name":"new","qualname":"<LayoutVerified<B, T>>::new","value":"pub fn new(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified`.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12385,"byte_end":12422,"line_start":359,"line_end":359,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12427,"byte_end":12430,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ `new` verifies that `bytes.len() == size_of::<T>()` and that `bytes` is","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12435,"byte_end":12510,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ aligned to `align_of::<T>()`, and constructs a new `LayoutVerified`. If","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12515,"byte_end":12590,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ either of these checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12595,"byte_end":12646,"line_start":363,"line_end":363,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12651,"byte_end":12660,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13376,"byte_end":13391,"line_start":380,"line_end":380,"column_start":12,"column_end":27},"name":"new_from_prefix","qualname":"<LayoutVerified<B, T>>::new_from_prefix","value":"pub fn new_from_prefix(B) -> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the prefix of a byte slice.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the prefix of a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12915,"byte_end":12984,"line_start":372,"line_end":372,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12989,"byte_end":12992,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ `new_from_prefix` verifies that `bytes.len() >= size_of::<T>()` and that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12997,"byte_end":13073,"line_start":374,"line_end":374,"column_start":5,"column_end":81}},{"value":"/ `bytes` is aligned to `align_of::<T>()`. It consumes the first","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13078,"byte_end":13144,"line_start":375,"line_end":375,"column_start":5,"column_end":71}},{"value":"/ `size_of::<T>()` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13149,"byte_end":13225,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ returns the remaining bytes to the caller. If either the length or","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13230,"byte_end":13300,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ alignment checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13305,"byte_end":13350,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13355,"byte_end":13364,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14216,"byte_end":14231,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"new_from_suffix","qualname":"<LayoutVerified<B, T>>::new_from_suffix","value":"pub fn new_from_suffix(B) -> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the suffix of a byte slice.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the suffix of a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13712,"byte_end":13781,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13786,"byte_end":13789,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ `new_from_suffix` verifies that `bytes.len() >= size_of::<T>()` and that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13794,"byte_end":13870,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ the last `size_of::<T>()` bytes of `bytes` are aligned to","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13875,"byte_end":13936,"line_start":391,"line_end":391,"column_start":5,"column_end":66}},{"value":"/ `align_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":13941,"byte_end":14012,"line_start":392,"line_end":392,"column_start":5,"column_end":76}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14017,"byte_end":14093,"line_start":393,"line_end":393,"column_start":5,"column_end":81}},{"value":"/ to the caller. If either the length or alignment checks fail, it returns","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14098,"byte_end":14174,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14179,"byte_end":14190,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14195,"byte_end":14204,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14773,"byte_end":14778,"line_start":417,"line_end":417,"column_start":12,"column_end":17},"name":"bytes","qualname":"<LayoutVerified<B, T>>::bytes","value":"pub fn bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14752,"byte_end":14761,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15308,"byte_end":15317,"line_start":437,"line_end":437,"column_start":12,"column_end":21},"name":"new_slice","qualname":"<LayoutVerified<B, [T]>>::new_slice","value":"pub fn new_slice(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14886,"byte_end":14939,"line_start":426,"line_end":426,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14944,"byte_end":14947,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ `new_slice` verifies that `bytes.len()` is a multiple of","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14952,"byte_end":15012,"line_start":428,"line_end":428,"column_start":5,"column_end":65}},{"value":"/ `size_of::<T>()` and that `bytes` is aligned to `align_of::<T>()`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15017,"byte_end":15091,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/ constructs a new `LayoutVerified`. If either of these checks fail, it","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15096,"byte_end":15169,"line_start":430,"line_end":430,"column_start":5,"column_end":78}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15174,"byte_end":15193,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15198,"byte_end":15201,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15206,"byte_end":15218,"line_start":433,"line_end":433,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15223,"byte_end":15226,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15231,"byte_end":15282,"line_start":435,"line_end":435,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15287,"byte_end":15296,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16320,"byte_end":16341,"line_start":460,"line_end":460,"column_start":12,"column_end":33},"name":"new_slice_from_prefix","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_prefix","value":"pub fn new_slice_from_prefix(B, usize) -> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type from the prefix of a byte slice.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type from the prefix of a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15627,"byte_end":15712,"line_start":447,"line_end":447,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15717,"byte_end":15720,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() * count`","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15725,"byte_end":15806,"line_start":449,"line_end":449,"column_start":5,"column_end":86}},{"value":"/ and that `bytes` is aligned to `align_of::<T>()`. It consumes the first","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15811,"byte_end":15886,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ `size_of::<T>() * count` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15891,"byte_end":15975,"line_start":451,"line_end":451,"column_start":5,"column_end":89}},{"value":"/ returns the remaining bytes to the caller. It also ensures that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":15980,"byte_end":16047,"line_start":452,"line_end":452,"column_start":5,"column_end":72}},{"value":"/ `sizeof::<T>() * count` does not overflow a `usize`. If any of the length,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16052,"byte_end":16130,"line_start":453,"line_end":453,"column_start":5,"column_end":83}},{"value":"/ alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16135,"byte_end":16193,"line_start":454,"line_end":454,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16198,"byte_end":16201,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16206,"byte_end":16218,"line_start":456,"line_end":456,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16223,"byte_end":16226,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16231,"byte_end":16294,"line_start":458,"line_end":458,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16299,"byte_end":16308,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17450,"byte_end":17471,"line_start":485,"line_end":485,"column_start":12,"column_end":33},"name":"new_slice_from_suffix","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_suffix","value":"pub fn new_slice_from_suffix(B, usize) -> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type from the suffix of a byte slice.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type from the suffix of a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16758,"byte_end":16843,"line_start":472,"line_end":472,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16848,"byte_end":16851,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() * count`","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16856,"byte_end":16937,"line_start":474,"line_end":474,"column_start":5,"column_end":86}},{"value":"/ and that `bytes` is aligned to `align_of::<T>()`. It consumes the last","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":16942,"byte_end":17016,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ `size_of::<T>() * count` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17021,"byte_end":17105,"line_start":476,"line_end":476,"column_start":5,"column_end":89}},{"value":"/ returns the preceding bytes to the caller. It also ensures that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17110,"byte_end":17177,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ `sizeof::<T>() * count` does not overflow a `usize`. If any of the length,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17182,"byte_end":17260,"line_start":478,"line_end":478,"column_start":5,"column_end":83}},{"value":"/ alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17265,"byte_end":17323,"line_start":479,"line_end":479,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17328,"byte_end":17331,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17336,"byte_end":17348,"line_start":481,"line_end":481,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17353,"byte_end":17356,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17361,"byte_end":17424,"line_start":483,"line_end":483,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":17429,"byte_end":17438,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19340,"byte_end":19350,"line_start":546,"line_end":546,"column_start":12,"column_end":22},"name":"new_zeroed","qualname":"<LayoutVerified<B, T>>::new_zeroed","value":"pub fn new_zeroed(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` after zeroing the bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":18807,"byte_end":18868,"line_start":536,"line_end":536,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":18873,"byte_end":18876,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ `new_zeroed` verifies that `bytes.len() == size_of::<T>()` and that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":18881,"byte_end":18952,"line_start":538,"line_end":538,"column_start":5,"column_end":76}},{"value":"/ `bytes` is aligned to `align_of::<T>()`, and constructs a new","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":18957,"byte_end":19022,"line_start":539,"line_end":539,"column_start":5,"column_end":70}},{"value":"/ `LayoutVerified`. If either of these checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19027,"byte_end":19099,"line_start":540,"line_end":540,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19104,"byte_end":19107,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then `bytes` will be initialized to zero. This","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19112,"byte_end":19185,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19190,"byte_end":19259,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19264,"byte_end":19314,"line_start":544,"line_end":544,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19319,"byte_end":19328,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20175,"byte_end":20197,"line_start":563,"line_end":563,"column_start":12,"column_end":34},"name":"new_from_prefix_zeroed","qualname":"<LayoutVerified<B, T>>::new_from_prefix_zeroed","value":"pub fn new_from_prefix_zeroed(B) -> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the prefix of a byte slice,\n zeroing the prefix.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the prefix of a byte slice,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19443,"byte_end":19512,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/ zeroing the prefix.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19517,"byte_end":19540,"line_start":551,"line_end":551,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19545,"byte_end":19548,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ `new_from_prefix_zeroed` verifies that `bytes.len() >= size_of::<T>()`","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19553,"byte_end":19627,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ and that `bytes` is aligned to `align_of::<T>()`. It consumes the first","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19632,"byte_end":19707,"line_start":554,"line_end":554,"column_start":5,"column_end":80}},{"value":"/ `size_of::<T>()` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19712,"byte_end":19788,"line_start":555,"line_end":555,"column_start":5,"column_end":81}},{"value":"/ returns the remaining bytes to the caller. If either the length or","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19793,"byte_end":19863,"line_start":556,"line_end":556,"column_start":5,"column_end":75}},{"value":"/ alignment checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19868,"byte_end":19913,"line_start":557,"line_end":557,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19918,"byte_end":19921,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the prefix which is consumed will be","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19926,"byte_end":19994,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":19999,"byte_end":20074,"line_start":560,"line_end":560,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20079,"byte_end":20149,"line_start":561,"line_end":561,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20154,"byte_end":20163,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21095,"byte_end":21117,"line_start":581,"line_end":581,"column_start":12,"column_end":34},"name":"new_from_suffix_zeroed","qualname":"<LayoutVerified<B, T>>::new_from_suffix_zeroed","value":"pub fn new_from_suffix_zeroed(B) -> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the suffix of a byte slice,\n zeroing the suffix.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the suffix of a byte slice,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20320,"byte_end":20389,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"/ zeroing the suffix.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20394,"byte_end":20417,"line_start":568,"line_end":568,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20422,"byte_end":20425,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ `new_from_suffix_zeroed` verifies that `bytes.len() >= size_of::<T>()` and that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20430,"byte_end":20513,"line_start":570,"line_end":570,"column_start":5,"column_end":88}},{"value":"/ the last `size_of::<T>()` bytes of `bytes` are aligned to","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20518,"byte_end":20579,"line_start":571,"line_end":571,"column_start":5,"column_end":66}},{"value":"/ `align_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20584,"byte_end":20655,"line_start":572,"line_end":572,"column_start":5,"column_end":76}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20660,"byte_end":20736,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/ to the caller. If either the length or alignment checks fail, it returns","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20741,"byte_end":20817,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20822,"byte_end":20833,"line_start":575,"line_end":575,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20838,"byte_end":20841,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the suffix which is consumed will be","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20846,"byte_end":20914,"line_start":577,"line_end":577,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20919,"byte_end":20994,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":20999,"byte_end":21069,"line_start":579,"line_end":579,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21074,"byte_end":21083,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21981,"byte_end":21997,"line_start":606,"line_end":606,"column_start":12,"column_end":28},"name":"new_slice_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_zeroed","value":"pub fn new_slice_zeroed(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type after zeroing the\n bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type after zeroing the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21305,"byte_end":21375,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/ bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21380,"byte_end":21390,"line_start":591,"line_end":591,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21395,"byte_end":21398,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ `new_slice_zeroed` verifies that `bytes.len()` is a multiple of","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21403,"byte_end":21470,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ `size_of::<T>()` and that `bytes` is aligned to `align_of::<T>()`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21475,"byte_end":21549,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ constructs a new `LayoutVerified`. If either of these checks fail, it","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21554,"byte_end":21627,"line_start":595,"line_end":595,"column_start":5,"column_end":78}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21632,"byte_end":21651,"line_start":596,"line_end":596,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21656,"byte_end":21659,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then `bytes` will be initialized to zero. This","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21664,"byte_end":21737,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21742,"byte_end":21811,"line_start":599,"line_end":599,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21816,"byte_end":21866,"line_start":600,"line_end":600,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21871,"byte_end":21874,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21879,"byte_end":21891,"line_start":602,"line_end":602,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21896,"byte_end":21899,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21904,"byte_end":21955,"line_start":604,"line_end":604,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21960,"byte_end":21969,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23067,"byte_end":23095,"line_start":628,"line_end":628,"column_start":12,"column_end":40},"name":"new_slice_from_prefix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_prefix_zeroed","value":"pub fn new_slice_from_prefix_zeroed(B, usize)\n-> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type from the prefix of a byte slice,\n after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type from the prefix of a byte slice,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22098,"byte_end":22183,"line_start":610,"line_end":610,"column_start":5,"column_end":90}},{"value":"/ after zeroing the bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22188,"byte_end":22216,"line_start":611,"line_end":611,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22221,"byte_end":22224,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() * count`","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22229,"byte_end":22310,"line_start":613,"line_end":613,"column_start":5,"column_end":86}},{"value":"/ and that `bytes` is aligned to `align_of::<T>()`. It consumes the first","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22315,"byte_end":22390,"line_start":614,"line_end":614,"column_start":5,"column_end":80}},{"value":"/ `size_of::<T>() * count` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22395,"byte_end":22479,"line_start":615,"line_end":615,"column_start":5,"column_end":89}},{"value":"/ returns the remaining bytes to the caller. It also ensures that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22484,"byte_end":22551,"line_start":616,"line_end":616,"column_start":5,"column_end":72}},{"value":"/ `sizeof::<T>() * count` does not overflow a `usize`. If any of the length,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22556,"byte_end":22634,"line_start":617,"line_end":617,"column_start":5,"column_end":83}},{"value":"/ alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22639,"byte_end":22697,"line_start":618,"line_end":618,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22702,"byte_end":22705,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the suffix which is consumed will be","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22710,"byte_end":22778,"line_start":620,"line_end":620,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22783,"byte_end":22858,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22863,"byte_end":22933,"line_start":622,"line_end":622,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22938,"byte_end":22941,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22946,"byte_end":22958,"line_start":624,"line_end":624,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22963,"byte_end":22966,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix_zeroed` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":22971,"byte_end":23041,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23046,"byte_end":23055,"line_start":627,"line_end":627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24229,"byte_end":24257,"line_start":653,"line_end":653,"column_start":12,"column_end":40},"name":"new_slice_from_suffix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_suffix_zeroed","value":"pub fn new_slice_from_suffix_zeroed(B, usize)\n-> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type from the prefix of a byte slice,\n after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type from the prefix of a byte slice,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23270,"byte_end":23355,"line_start":635,"line_end":635,"column_start":5,"column_end":90}},{"value":"/ after zeroing the bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23360,"byte_end":23388,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23393,"byte_end":23396,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() * count`","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23401,"byte_end":23482,"line_start":638,"line_end":638,"column_start":5,"column_end":86}},{"value":"/ and that `bytes` is aligned to `align_of::<T>()`. It consumes the last","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23487,"byte_end":23561,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/ `size_of::<T>() * count` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23566,"byte_end":23650,"line_start":640,"line_end":640,"column_start":5,"column_end":89}},{"value":"/ returns the preceding bytes to the caller. It also ensures that","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23655,"byte_end":23722,"line_start":641,"line_end":641,"column_start":5,"column_end":72}},{"value":"/ `sizeof::<T>() * count` does not overflow a `usize`. If any of the length,","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23727,"byte_end":23805,"line_start":642,"line_end":642,"column_start":5,"column_end":83}},{"value":"/ alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23810,"byte_end":23868,"line_start":643,"line_end":643,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23873,"byte_end":23876,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the consumed suffix will be initialized to zero. This","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23881,"byte_end":23966,"line_start":645,"line_end":645,"column_start":5,"column_end":90}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":23971,"byte_end":24040,"line_start":646,"line_end":646,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24045,"byte_end":24095,"line_start":647,"line_end":647,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24100,"byte_end":24103,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24108,"byte_end":24120,"line_start":649,"line_end":649,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24125,"byte_end":24128,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix_zeroed` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24133,"byte_end":24203,"line_start":651,"line_end":651,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24208,"byte_end":24217,"line_start":652,"line_end":652,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24794,"byte_end":24807,"line_start":673,"line_end":673,"column_start":12,"column_end":25},"name":"new_unaligned","qualname":"<LayoutVerified<B, T>>::new_unaligned","value":"pub fn new_unaligned(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` for a type with no alignment\n requirement.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` for a type with no alignment","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24510,"byte_end":24575,"line_start":666,"line_end":666,"column_start":5,"column_end":70}},{"value":"/ requirement.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24580,"byte_end":24596,"line_start":667,"line_end":667,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24601,"byte_end":24604,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned` verifies that `bytes.len() == size_of::<T>()` and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24609,"byte_end":24678,"line_start":669,"line_end":669,"column_start":5,"column_end":74}},{"value":"/ constructs a new `LayoutVerified`. If the check fails, it returns","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24683,"byte_end":24752,"line_start":670,"line_end":670,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24757,"byte_end":24768,"line_start":671,"line_end":671,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24773,"byte_end":24782,"line_start":672,"line_end":672,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25438,"byte_end":25463,"line_start":688,"line_end":688,"column_start":12,"column_end":37},"name":"new_unaligned_from_prefix","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_prefix","value":"pub fn new_unaligned_from_prefix(B) -> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the prefix of a byte slice for a\n type with no alignment requirement.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the prefix of a byte slice for a","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24995,"byte_end":25069,"line_start":680,"line_end":680,"column_start":5,"column_end":79}},{"value":"/ type with no alignment requirement.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25074,"byte_end":25113,"line_start":681,"line_end":681,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25118,"byte_end":25121,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_prefix` verifies that `bytes.len() >=","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25126,"byte_end":25187,"line_start":683,"line_end":683,"column_start":5,"column_end":66}},{"value":"/ size_of::<T>()`. It consumes the first `size_of::<T>()` bytes from","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25192,"byte_end":25262,"line_start":684,"line_end":684,"column_start":5,"column_end":75}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the remaining bytes","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25267,"byte_end":25343,"line_start":685,"line_end":685,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25348,"byte_end":25412,"line_start":686,"line_end":686,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25417,"byte_end":25426,"line_start":687,"line_end":687,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26174,"byte_end":26199,"line_start":704,"line_end":704,"column_start":12,"column_end":37},"name":"new_unaligned_from_suffix","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_suffix","value":"pub fn new_unaligned_from_suffix(B) -> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the suffix of a byte slice for a\n type with no alignment requirement.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the suffix of a byte slice for a","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25732,"byte_end":25806,"line_start":696,"line_end":696,"column_start":5,"column_end":79}},{"value":"/ type with no alignment requirement.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25811,"byte_end":25850,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25855,"byte_end":25858,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_suffix` verifies that `bytes.len() >=","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25863,"byte_end":25924,"line_start":699,"line_end":699,"column_start":5,"column_end":66}},{"value":"/ size_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":25929,"byte_end":25998,"line_start":700,"line_end":700,"column_start":5,"column_end":74}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26003,"byte_end":26079,"line_start":701,"line_end":701,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26084,"byte_end":26148,"line_start":702,"line_end":702,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26153,"byte_end":26162,"line_start":703,"line_end":703,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26995,"byte_end":27014,"line_start":730,"line_end":730,"column_start":12,"column_end":31},"name":"new_slice_unaligned","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned","value":"pub fn new_slice_unaligned(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type with no alignment\n requirement.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type with no alignment","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26595,"byte_end":26665,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/ requirement.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26670,"byte_end":26686,"line_start":720,"line_end":720,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26691,"byte_end":26694,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned` verifies that `bytes.len()` is a multiple of","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26699,"byte_end":26769,"line_start":722,"line_end":722,"column_start":5,"column_end":75}},{"value":"/ `size_of::<T>()` and constructs a new `LayoutVerified`. If the check","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26774,"byte_end":26846,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ fails, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26851,"byte_end":26880,"line_start":724,"line_end":724,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26885,"byte_end":26888,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26893,"byte_end":26905,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26910,"byte_end":26913,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26918,"byte_end":26969,"line_start":728,"line_end":728,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26974,"byte_end":26983,"line_start":729,"line_end":729,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27925,"byte_end":27956,"line_start":751,"line_end":751,"column_start":12,"column_end":43},"name":"new_slice_unaligned_from_prefix","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_prefix","value":"pub fn new_slice_unaligned_from_prefix(B, usize)\n-> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type with no alignment requirement\n from the prefix of a byte slice.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type with no alignment requirement","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27252,"byte_end":27334,"line_start":738,"line_end":738,"column_start":5,"column_end":87}},{"value":"/ from the prefix of a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27339,"byte_end":27375,"line_start":739,"line_end":739,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27380,"byte_end":27383,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() * count`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27388,"byte_end":27470,"line_start":741,"line_end":741,"column_start":5,"column_end":87}},{"value":"/ It consumes the first `size_of::<T>() * count` bytes from `bytes` to construct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27475,"byte_end":27557,"line_start":742,"line_end":742,"column_start":5,"column_end":87}},{"value":"/ a `LayoutVerified`, and returns the remaining bytes to the caller. It also","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27562,"byte_end":27640,"line_start":743,"line_end":743,"column_start":5,"column_end":83}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If either the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27645,"byte_end":27728,"line_start":744,"line_end":744,"column_start":5,"column_end":88}},{"value":"/ length, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27733,"byte_end":27788,"line_start":745,"line_end":745,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27793,"byte_end":27796,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27801,"byte_end":27813,"line_start":747,"line_end":747,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27818,"byte_end":27821,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_prefix` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27826,"byte_end":27899,"line_start":749,"line_end":749,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":27904,"byte_end":27913,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29078,"byte_end":29109,"line_start":779,"line_end":779,"column_start":12,"column_end":43},"name":"new_slice_unaligned_from_suffix","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_suffix","value":"pub fn new_slice_unaligned_from_suffix(B, usize)\n-> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type with no alignment requirement\n from the suffix of a byte slice.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type with no alignment requirement","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28406,"byte_end":28488,"line_start":766,"line_end":766,"column_start":5,"column_end":87}},{"value":"/ from the suffix of a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28493,"byte_end":28529,"line_start":767,"line_end":767,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28534,"byte_end":28537,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() * count`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28542,"byte_end":28624,"line_start":769,"line_end":769,"column_start":5,"column_end":87}},{"value":"/ It consumes the last `size_of::<T>() * count` bytes from `bytes` to construct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28629,"byte_end":28710,"line_start":770,"line_end":770,"column_start":5,"column_end":86}},{"value":"/ a `LayoutVerified`, and returns the remaining bytes to the caller. It also","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28715,"byte_end":28793,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If either the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28798,"byte_end":28881,"line_start":772,"line_end":772,"column_start":5,"column_end":88}},{"value":"/ length, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28886,"byte_end":28941,"line_start":773,"line_end":773,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28946,"byte_end":28949,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28954,"byte_end":28966,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28971,"byte_end":28974,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_suffix` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":28979,"byte_end":29052,"line_start":777,"line_end":777,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29057,"byte_end":29066,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30165,"byte_end":30185,"line_start":811,"line_end":811,"column_start":12,"column_end":32},"name":"new_unaligned_zeroed","qualname":"<LayoutVerified<B, T>>::new_unaligned_zeroed","value":"pub fn new_unaligned_zeroed(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` for a type with no alignment\n requirement, zeroing the bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` for a type with no alignment","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29640,"byte_end":29705,"line_start":800,"line_end":800,"column_start":5,"column_end":70}},{"value":"/ requirement, zeroing the bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29710,"byte_end":29745,"line_start":801,"line_end":801,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29750,"byte_end":29753,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_zeroed` verifies that `bytes.len() == size_of::<T>()` and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29758,"byte_end":29834,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ constructs a new `LayoutVerified`. If the check fails, it returns","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29839,"byte_end":29908,"line_start":804,"line_end":804,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29913,"byte_end":29924,"line_start":805,"line_end":805,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29929,"byte_end":29932,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then `bytes` will be initialized to zero. This","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29937,"byte_end":30010,"line_start":807,"line_end":807,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30015,"byte_end":30084,"line_start":808,"line_end":808,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30089,"byte_end":30139,"line_start":809,"line_end":809,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30144,"byte_end":30153,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30994,"byte_end":31026,"line_start":827,"line_end":827,"column_start":12,"column_end":44},"name":"new_unaligned_from_prefix_zeroed","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_prefix_zeroed","value":"pub fn new_unaligned_from_prefix_zeroed(B)\n-> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the prefix of a byte slice for a\n type with no alignment requirement, zeroing the prefix.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the prefix of a byte slice for a","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30288,"byte_end":30362,"line_start":815,"line_end":815,"column_start":5,"column_end":79}},{"value":"/ type with no alignment requirement, zeroing the prefix.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30367,"byte_end":30426,"line_start":816,"line_end":816,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30431,"byte_end":30434,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_prefix_zeroed` verifies that `bytes.len() >=","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30439,"byte_end":30507,"line_start":818,"line_end":818,"column_start":5,"column_end":73}},{"value":"/ size_of::<T>()`. It consumes the first `size_of::<T>()` bytes from","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30512,"byte_end":30582,"line_start":819,"line_end":819,"column_start":5,"column_end":75}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the remaining bytes","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30587,"byte_end":30663,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30668,"byte_end":30732,"line_start":821,"line_end":821,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30737,"byte_end":30740,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then the prefix which is consumed will be","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30745,"byte_end":30813,"line_start":823,"line_end":823,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30818,"byte_end":30893,"line_start":824,"line_end":824,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30898,"byte_end":30968,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":30973,"byte_end":30982,"line_start":826,"line_end":826,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31864,"byte_end":31896,"line_start":843,"line_end":843,"column_start":12,"column_end":44},"name":"new_unaligned_from_suffix_zeroed","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_suffix_zeroed","value":"pub fn new_unaligned_from_suffix_zeroed(B)\n-> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` from the suffix of a byte slice for a\n type with no alignment requirement, zeroing the suffix.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` from the suffix of a byte slice for a","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31159,"byte_end":31233,"line_start":831,"line_end":831,"column_start":5,"column_end":79}},{"value":"/ type with no alignment requirement, zeroing the suffix.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31238,"byte_end":31297,"line_start":832,"line_end":832,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31302,"byte_end":31305,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_suffix_zeroed` verifies that `bytes.len() >=","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31310,"byte_end":31378,"line_start":834,"line_end":834,"column_start":5,"column_end":73}},{"value":"/ size_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31383,"byte_end":31452,"line_start":835,"line_end":835,"column_start":5,"column_end":74}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31457,"byte_end":31533,"line_start":836,"line_end":836,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31538,"byte_end":31602,"line_start":837,"line_end":837,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31607,"byte_end":31610,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then the suffix which is consumed will be","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31615,"byte_end":31683,"line_start":839,"line_end":839,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31688,"byte_end":31763,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31768,"byte_end":31838,"line_start":841,"line_end":841,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":31843,"byte_end":31852,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32754,"byte_end":32780,"line_start":868,"line_end":868,"column_start":12,"column_end":38},"name":"new_slice_unaligned_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_zeroed","value":"pub fn new_slice_unaligned_zeroed(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` for a slice type with no alignment\n requirement, zeroing the bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` for a slice type with no alignment","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32112,"byte_end":32183,"line_start":853,"line_end":853,"column_start":5,"column_end":76}},{"value":"/ requirement, zeroing the bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32188,"byte_end":32223,"line_start":854,"line_end":854,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32228,"byte_end":32231,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_zeroed` verifies that `bytes.len()` is a multiple","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32236,"byte_end":32310,"line_start":856,"line_end":856,"column_start":5,"column_end":79}},{"value":"/ of `size_of::<T>()` and constructs a new `LayoutVerified`. If the check","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32315,"byte_end":32390,"line_start":857,"line_end":857,"column_start":5,"column_end":80}},{"value":"/ fails, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32395,"byte_end":32424,"line_start":858,"line_end":858,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32429,"byte_end":32432,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then `bytes` will be initialized to zero. This","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32437,"byte_end":32510,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32515,"byte_end":32584,"line_start":861,"line_end":861,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32589,"byte_end":32639,"line_start":862,"line_end":862,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32644,"byte_end":32647,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32652,"byte_end":32664,"line_start":864,"line_end":864,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32669,"byte_end":32672,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32677,"byte_end":32728,"line_start":866,"line_end":866,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32733,"byte_end":32742,"line_start":867,"line_end":867,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33814,"byte_end":33852,"line_start":889,"line_end":889,"column_start":12,"column_end":50},"name":"new_slice_unaligned_from_prefix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_prefix_zeroed","value":"pub fn new_slice_unaligned_from_prefix_zeroed(B, usize)\n-> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type with no alignment requirement\n from the prefix of a byte slice, after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type with no alignment requirement","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32891,"byte_end":32973,"line_start":872,"line_end":872,"column_start":5,"column_end":87}},{"value":"/ from the prefix of a byte slice, after zeroing the bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32978,"byte_end":33039,"line_start":873,"line_end":873,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33044,"byte_end":33047,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() * count`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33052,"byte_end":33134,"line_start":875,"line_end":875,"column_start":5,"column_end":87}},{"value":"/ It consumes the first `size_of::<T>() * count` bytes from `bytes` to construct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33139,"byte_end":33221,"line_start":876,"line_end":876,"column_start":5,"column_end":87}},{"value":"/ a `LayoutVerified`, and returns the remaining bytes to the caller. It also","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33226,"byte_end":33304,"line_start":877,"line_end":877,"column_start":5,"column_end":83}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If either the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33309,"byte_end":33392,"line_start":878,"line_end":878,"column_start":5,"column_end":88}},{"value":"/ length, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33397,"byte_end":33452,"line_start":879,"line_end":879,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33457,"byte_end":33460,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the prefix will be initialized to zero. This","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33465,"byte_end":33541,"line_start":881,"line_end":881,"column_start":5,"column_end":81}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33546,"byte_end":33615,"line_start":882,"line_end":882,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33620,"byte_end":33670,"line_start":883,"line_end":883,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33675,"byte_end":33678,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33683,"byte_end":33695,"line_start":885,"line_end":885,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33700,"byte_end":33703,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_prefix_zeroed` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33708,"byte_end":33788,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":33793,"byte_end":33802,"line_start":888,"line_end":888,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34959,"byte_end":34997,"line_start":913,"line_end":913,"column_start":12,"column_end":50},"name":"new_slice_unaligned_from_suffix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_suffix_zeroed","value":"pub fn new_slice_unaligned_from_suffix_zeroed(B, usize)\n-> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LayoutVerified` of a slice type with no alignment requirement\n from the suffix of a byte slice, after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Construct a new `LayoutVerified` of a slice type with no alignment requirement","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34037,"byte_end":34119,"line_start":896,"line_end":896,"column_start":5,"column_end":87}},{"value":"/ from the suffix of a byte slice, after zeroing the bytes.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34124,"byte_end":34185,"line_start":897,"line_end":897,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34190,"byte_end":34193,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() * count`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34198,"byte_end":34280,"line_start":899,"line_end":899,"column_start":5,"column_end":87}},{"value":"/ It consumes the last `size_of::<T>() * count` bytes from `bytes` to construct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34285,"byte_end":34366,"line_start":900,"line_end":900,"column_start":5,"column_end":86}},{"value":"/ a `LayoutVerified`, and returns the remaining bytes to the caller. It also","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34371,"byte_end":34449,"line_start":901,"line_end":901,"column_start":5,"column_end":83}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If either the","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34454,"byte_end":34537,"line_start":902,"line_end":902,"column_start":5,"column_end":88}},{"value":"/ length, or overflow checks fail, it returns `None`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34542,"byte_end":34597,"line_start":903,"line_end":903,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34602,"byte_end":34605,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the suffix will be initialized to zero. This","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34610,"byte_end":34686,"line_start":905,"line_end":905,"column_start":5,"column_end":81}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34691,"byte_end":34760,"line_start":906,"line_end":906,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34765,"byte_end":34815,"line_start":907,"line_end":907,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34820,"byte_end":34823,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34828,"byte_end":34840,"line_start":909,"line_end":909,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34845,"byte_end":34848,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_suffix_zeroed` panics if `T` is a zero-sized type.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34853,"byte_end":34933,"line_start":911,"line_end":911,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":34938,"byte_end":34947,"line_start":912,"line_end":912,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35430,"byte_end":35438,"line_start":930,"line_end":930,"column_start":12,"column_end":20},"name":"into_ref","qualname":"<LayoutVerified<B, T>>::into_ref","value":"pub fn into_ref(Self) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Convert this `LayoutVerified` into a reference.","sig":null,"attributes":[{"value":"/ Convert this `LayoutVerified` into a reference.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35269,"byte_end":35320,"line_start":926,"line_end":926,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35325,"byte_end":35328,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ `into_ref` consumes the `LayoutVerified`, and returns a reference to","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35333,"byte_end":35405,"line_start":928,"line_end":928,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35410,"byte_end":35418,"line_start":929,"line_end":929,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36208,"byte_end":36216,"line_start":950,"line_end":950,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<LayoutVerified<B, T>>::into_mut","value":"pub fn into_mut(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Convert this `LayoutVerified` into a mutable reference.","sig":null,"attributes":[{"value":"/ Convert this `LayoutVerified` into a mutable reference.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36031,"byte_end":36090,"line_start":946,"line_end":946,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36095,"byte_end":36098,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ `into_mut` consumes the `LayoutVerified`, and returns a mutable","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36103,"byte_end":36170,"line_start":948,"line_end":948,"column_start":5,"column_end":72}},{"value":"/ reference to `T`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36175,"byte_end":36196,"line_start":949,"line_end":949,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37008,"byte_end":37018,"line_start":970,"line_end":970,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<LayoutVerified<B, [T]>>::into_slice","value":"pub fn into_slice(Self) -> &'a [T]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `LayoutVerified` into a slice reference.","sig":null,"attributes":[{"value":"/ Convert this `LayoutVerified` into a slice reference.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36837,"byte_end":36894,"line_start":966,"line_end":966,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36899,"byte_end":36902,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ `into_slice` consumes the `LayoutVerified`, and returns a reference to","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36907,"byte_end":36981,"line_start":968,"line_end":968,"column_start":5,"column_end":79}},{"value":"/ `[T]`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36986,"byte_end":36996,"line_start":969,"line_end":969,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37818,"byte_end":37832,"line_start":990,"line_end":990,"column_start":12,"column_end":26},"name":"into_mut_slice","qualname":"<LayoutVerified<B, [T]>>::into_mut_slice","value":"pub fn into_mut_slice(Self) -> &'a mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `LayoutVerified` into a mutable slice reference.","sig":null,"attributes":[{"value":"/ Convert this `LayoutVerified` into a mutable slice reference.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37627,"byte_end":37692,"line_start":986,"line_end":986,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37697,"byte_end":37700,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ `into_mut_slice` consumes the `LayoutVerified`, and returns a mutable reference to","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37705,"byte_end":37791,"line_start":988,"line_end":988,"column_start":5,"column_end":91}},{"value":"/ `[T]`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37796,"byte_end":37806,"line_start":989,"line_end":989,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":41446,"byte_end":41455,"line_start":1095,"line_end":1095,"column_start":12,"column_end":21},"name":"bytes_mut","qualname":"<LayoutVerified<B, T>>::bytes_mut","value":"pub fn bytes_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":41425,"byte_end":41434,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45094,"byte_end":45100,"line_start":1222,"line_end":1222,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46499,"byte_end":46508,"line_start":1251,"line_end":1251,"column_start":18,"column_end":27},"name":"ByteSlice","qualname":"::ByteSlice","value":"ByteSlice: Deref<Target = [u8]> + Sized + self::sealed::Sealed","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" A mutable or immutable reference to a byte slice.","sig":null,"attributes":[{"value":"/ A mutable or immutable reference to a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45857,"byte_end":45910,"line_start":1238,"line_end":1238,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45911,"byte_end":45914,"line_start":1239,"line_end":1239,"column_start":1,"column_end":4}},{"value":"/ `ByteSlice` abstracts over the mutability of a byte slice reference, and is","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45915,"byte_end":45994,"line_start":1240,"line_end":1240,"column_start":1,"column_end":80}},{"value":"/ implemented for various special reference types such as `Ref<[u8]>` and","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45995,"byte_end":46070,"line_start":1241,"line_end":1241,"column_start":1,"column_end":76}},{"value":"/ `RefMut<[u8]>`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46071,"byte_end":46090,"line_start":1242,"line_end":1242,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46091,"byte_end":46094,"line_start":1243,"line_end":1243,"column_start":1,"column_end":4}},{"value":"/ Note that, while it would be technically possible, `ByteSlice` is not","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46095,"byte_end":46168,"line_start":1244,"line_end":1244,"column_start":1,"column_end":74}},{"value":"/ implemented for [`Vec<u8>`], as the only way to implement the [`split_at`]","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46169,"byte_end":46247,"line_start":1245,"line_end":1245,"column_start":1,"column_end":79}},{"value":"/ method would involve reallocation, and `split_at` must be a very cheap","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46248,"byte_end":46322,"line_start":1246,"line_end":1246,"column_start":1,"column_end":75}},{"value":"/ operation in order for the utilities in this crate to perform as designed.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46323,"byte_end":46401,"line_start":1247,"line_end":1247,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46402,"byte_end":46405,"line_start":1248,"line_end":1248,"column_start":1,"column_end":4}},{"value":"/ [`Vec<u8>`]: std::vec::Vec","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46406,"byte_end":46436,"line_start":1249,"line_end":1249,"column_start":1,"column_end":31}},{"value":"/ [`split_at`]: crate::ByteSlice::split_at","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46437,"byte_end":46481,"line_start":1250,"line_end":1250,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46571,"byte_end":46577,"line_start":1252,"line_end":1252,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::ByteSlice::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46606,"byte_end":46614,"line_start":1253,"line_end":1253,"column_start":8,"column_end":16},"name":"split_at","qualname":"::ByteSlice::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46897,"byte_end":46909,"line_start":1261,"line_end":1261,"column_start":18,"column_end":30},"name":"ByteSliceMut","qualname":"::ByteSliceMut","value":"ByteSliceMut: ByteSlice + DerefMut","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" A mutable reference to a byte slice.","sig":null,"attributes":[{"value":"/ A mutable reference to a byte slice.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46653,"byte_end":46693,"line_start":1256,"line_end":1256,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46694,"byte_end":46697,"line_start":1257,"line_end":1257,"column_start":1,"column_end":4}},{"value":"/ `ByteSliceMut` abstracts over various ways of storing a mutable reference to","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46698,"byte_end":46778,"line_start":1258,"line_end":1258,"column_start":1,"column_end":81}},{"value":"/ a byte slice, and is implemented for various special reference types such as","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46779,"byte_end":46859,"line_start":1259,"line_end":1259,"column_start":1,"column_end":81}},{"value":"/ `RefMut<[u8]>`.","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46860,"byte_end":46879,"line_start":1260,"line_end":1260,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46941,"byte_end":46951,"line_start":1262,"line_end":1262,"column_start":8,"column_end":18},"name":"as_mut_ptr","qualname":"::ByteSliceMut::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12334,"byte_end":12348,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14653,"byte_end":14667,"line_start":410,"line_end":410,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14833,"byte_end":14847,"line_start":422,"line_end":422,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":18753,"byte_end":18767,"line_start":532,"line_end":532,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21249,"byte_end":21263,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24441,"byte_end":24455,"line_start":661,"line_end":661,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26524,"byte_end":26538,"line_start":714,"line_end":714,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29568,"byte_end":29582,"line_start":795,"line_end":795,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32038,"byte_end":32052,"line_start":848,"line_end":848,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35195,"byte_end":35209,"line_start":921,"line_end":921,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35944,"byte_end":35958,"line_start":941,"line_end":941,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36761,"byte_end":36775,"line_start":961,"line_end":961,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37538,"byte_end":37552,"line_start":981,"line_end":981,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":38387,"byte_end":38401,"line_start":1001,"line_end":1001,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":39151,"byte_end":39165,"line_start":1022,"line_end":1022,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":39963,"byte_end":39977,"line_start":1043,"line_end":1043,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":40560,"byte_end":40574,"line_start":1063,"line_end":1063,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":41315,"byte_end":41329,"line_start":1088,"line_end":1088,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":41532,"byte_end":41546,"line_start":1100,"line_end":1100,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":42143,"byte_end":42157,"line_start":1118,"line_end":1118,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":42761,"byte_end":42775,"line_start":1135,"line_end":1135,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":43390,"byte_end":43404,"line_start":1153,"line_end":1153,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44026,"byte_end":44040,"line_start":1170,"line_end":1170,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44258,"byte_end":44272,"line_start":1182,"line_end":1182,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44532,"byte_end":44546,"line_start":1194,"line_end":1194,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44776,"byte_end":44790,"line_start":1207,"line_end":1207,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45204,"byte_end":45207,"line_start":1225,"line_end":1225,"column_start":25,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45245,"byte_end":45251,"line_start":1226,"line_end":1226,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":47432,"byte_end":47435,"line_start":1281,"line_end":1281,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":47676,"byte_end":47682,"line_start":1289,"line_end":1289,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":48065,"byte_end":48071,"line_start":1303,"line_end":1303,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":1107,"byte_end":1116,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":12334,"byte_end":12348,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14653,"byte_end":14667,"line_start":410,"line_end":410,"column_start":12,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":14833,"byte_end":14847,"line_start":422,"line_end":422,"column_start":12,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":18753,"byte_end":18767,"line_start":532,"line_end":532,"column_start":12,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":21249,"byte_end":21263,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":24441,"byte_end":24455,"line_start":661,"line_end":661,"column_start":12,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":26524,"byte_end":26538,"line_start":714,"line_end":714,"column_start":12,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":29568,"byte_end":29582,"line_start":795,"line_end":795,"column_start":12,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":32038,"byte_end":32052,"line_start":848,"line_end":848,"column_start":12,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35195,"byte_end":35209,"line_start":921,"line_end":921,"column_start":16,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":35944,"byte_end":35958,"line_start":941,"line_end":941,"column_start":16,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":36761,"byte_end":36775,"line_start":961,"line_end":961,"column_start":16,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":37538,"byte_end":37552,"line_start":981,"line_end":981,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":38387,"byte_end":38401,"line_start":1001,"line_end":1001,"column_start":12,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":39151,"byte_end":39165,"line_start":1022,"line_end":1022,"column_start":12,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":39963,"byte_end":39977,"line_start":1043,"line_end":1043,"column_start":12,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":40560,"byte_end":40574,"line_start":1063,"line_end":1063,"column_start":12,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":41315,"byte_end":41329,"line_start":1088,"line_end":1088,"column_start":12,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":41532,"byte_end":41546,"line_start":1100,"line_end":1100,"column_start":22,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":3227}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":42143,"byte_end":42157,"line_start":1118,"line_end":1118,"column_start":25,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":3240}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":42761,"byte_end":42775,"line_start":1135,"line_end":1135,"column_start":22,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":3227}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":43390,"byte_end":43404,"line_start":1153,"line_end":1153,"column_start":25,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":3240}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44026,"byte_end":44040,"line_start":1170,"line_end":1170,"column_start":24,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":9408}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44258,"byte_end":44272,"line_start":1182,"line_end":1182,"column_start":22,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44532,"byte_end":44546,"line_start":1194,"line_end":1194,"column_start":24,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":9408}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":44776,"byte_end":44790,"line_start":1207,"line_end":1207,"column_start":22,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45204,"byte_end":45207,"line_start":1225,"line_end":1225,"column_start":25,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":1,"index":4380},"to":{"krate":0,"index":273}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":45245,"byte_end":45251,"line_start":1226,"line_end":1226,"column_start":25,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":4434},"to":{"krate":0,"index":273}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46510,"byte_end":46515,"line_start":1251,"line_end":1251,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3227},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46533,"byte_end":46538,"line_start":1251,"line_end":1251,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46555,"byte_end":46561,"line_start":1251,"line_end":1251,"column_start":74,"column_end":80},"kind":"SuperTrait","from":{"krate":0,"index":273},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46911,"byte_end":46920,"line_start":1261,"line_end":1261,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":282},"to":{"krate":0,"index":285}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":46923,"byte_end":46931,"line_start":1261,"line_end":1261,"column_start":44,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":3240},"to":{"krate":0,"index":285}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":47432,"byte_end":47435,"line_start":1281,"line_end":1281,"column_start":31,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":4380},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":47676,"byte_end":47682,"line_start":1289,"line_end":1289,"column_start":31,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":4434},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\Chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zerocopy-0.5.0\\src\\lib.rs","byte_start":48065,"byte_end":48071,"line_start":1303,"line_end":1303,"column_start":34,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":4434},"to":{"krate":0,"index":285}}]}